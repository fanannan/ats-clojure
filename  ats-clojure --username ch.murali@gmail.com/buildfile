# Generated by Buildr 1.4.6, change to your liking


# Version number for this release
VERSION_NUMBER = "1.0.0"
# Group identifier for your projects
GROUP = "ATS"
COPYRIGHT = ""

# Specify Maven 2.0 remote repositories here, like this:
repositories.remote << "http://www.ibiblio.org/maven2/"
repositories.remote << 'http://repo1.maven.org/maven2'
repositories.remote << 'http://build.clojure.org/releases'
repositories.remote << 'http://repo.incanter.org'
repositories.remote << 'http://build.clojure.org/snapshots'
repositories.remote << 'http://clojars.org/repo/'


desc "The Ats project"
define "ATS" do
  project.version = VERSION_NUMBER
  project.group = GROUP
  manifest["Implementation-Vendor"] = COPYRIGHT

  define "ibbase" do
    compile.with 'com.ib:jtsclient:jar:9.6'
    test.compile.with 'com.ib:jtsclient:jar:9.6'
    package(:jar)
  end


  define 'ibconnection' do
  project.group = 'ATS'
  project.version = '0.0.1-SNAPSHOT'
  CLOJURE='org.clojure:clojure:jar:1.3.0'
  HAZELCAST='com.hazelcast:hazelcast:jar:1.9.3.1'
	compile.with project('ibbase'), HAZELCAST,CLOJURE, 'swank-clojure:swank-clojure:jar:1.3.2','com.ib:jtsclient:jar:9.6'

	task :build do
         cp project.compile.dependencies.collect { |t| t.to_s }, project.path_to('lib')
        
         sourcefiles = Array.new
         sources = FileList[_("src/main/clojure/**/*.clj")].collect {|x| x = x.split(".clj") }
         sources.each {
                |source|
                patha=Pathname.new(project.path_to('src/main/clojure'))
                #puts "patha"+patha.to_s
                #puts "source" + source.to_s
                pathb=Pathname.new(source.to_s)
                temp= pathb.relative_path_from(patha).to_s
                #puts "relative path"+temp
                sourcefiles.push(temp)
                #puts "all source files"+sourcefiles.to_s
                 }

         puts "all source files"+sourcefiles.to_s
         sourcedir = FileList[_("src/main/clojure/**/*")] #.collect {|x| x.split(".clj") }
         puts "all source dir file"+sourcedir.to_s
         source_paths = sourcedir.select { |source| File.directory?(source) }
         puts "source_paths"+source_paths.to_s
         cp_str = path_to(:target,:classes)
         puts "cp_str"+cp_str
	 Java::Commands.java(
   	 :classpath => [ compile.dependencies,cp_str,sourcedir ],
   	 :java_args => ["clojure.lang.Compile",sourcefiles],
         :properties => {"clojure.compile.path" => cp_str },
         :verbose=>[true]
            )
        end
        package :jar, :id => 'ibconnection'
end # ibconnection.do
end
